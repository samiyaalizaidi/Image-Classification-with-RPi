1. UPDATE THE SYSTEM

	$ sudo apt-get update
	$ sudo apt-get upgrade
	$ sudo apt-get install python3-pip python3-virtualenv

2. INSTALL PYENV

	$ curl https://pyenv.run | bash
	$ sudo nano ~/.bashrc

	add the following lines at the end of the bashrc script:

	export PYENV_ROOT="$HOME/.pyenv"
	[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
	eval "$(pyenv init -)"
	eval "$(pyenv virtualenv-init -)"

	Save and exit.

3. Restart the terminal

4. Make sure it worked

	$ pyenv --version
	(you must get an output here, otherwise it means something went wrong)

5. Install system packages
	$ sudo apt-get install --yes libatlas-base-dev libjasper-dev libilmbase-dev libopenexr-dev libgstreamer1.0-dev libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev libgdbm-dev lzma lzma-dev tcl-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev wget curl make build-essential openssl

	$ sudo apt-get install -y libhdf5-dev libc-ares-dev libeigen3-dev gcc gfortran libgfortran5 libatlas3-base libatlas-base-dev libopenblas-dev libopenblas-base libblas-dev liblapack-dev cython3 libatlas-base-dev openmpi-bin libopenmpi-dev python3-dev build-essential cmake pkg-config libjpeg-dev libtiff5-dev libpng-dev libavcodec-dev libavformat-dev libswscale-dev libv4l-dev libxvidcore-dev libx264-dev libfontconfig1-dev libcairo2-dev libgdk-pixbuf2.0-dev libpango1.0-dev libgtk2.0-dev libgtk-3-dev libhdf5-serial-dev libhdf5-103 libqt5gui5 libqt5webkit5 libqt5test5 python3-pyqt5 libatlas-base-dev libjasper-dev libilmbase-dev libopenexr-dev libgstreamer1.0-dev

	$ sudo apt-get install -y libxrandr2 libdatrie1 libtheora0 libxcb-shm0 libavutil56 libopus0 libxfixes3 libcairo2 libswscale5 libspeex1 libaom0 libvorbisenc2 libwayland-egl1 libva2 libtiff5 libbluray2 libx265-165 libxvidcore4 libzvbi0 libsoxr0 libcroco3 libvorbis0a libavformat58 libcairo-gobject2 libmpg123-0 libogg0 libxrender1 libwayland-cursor0 libswresample3 libdrm2 libopenmpt0 libgme0 libvorbisfile3 libwebp6 libsnappy1v5 libtwolame0 libjbig0 libchromaprint1 libpango-1.0-0 libpixman-1-0 libatspi2.0-0 libvdpau1 libssh-gcrypt-4 libva-x11-2 libgsm1 libxinerama1 libx264-155 libwavpack1 libcodec2-0.8.1 libharfbuzz0b libepoxy0 libatlas3-base libxkbcommon0 libgfortran5 libxcb-render0 libfontconfig1 libpangoft2-1.0-0 libgdk-pixbuf2.0-0 libwayland-client0 libpangocairo-1.0-0 libxcomposite1 libvpx5 libxdamage1 libgtk-3-0 libva-drm2 libgraphite2-3 libavcodec58 libatk-bridge2.0-0 libopenjp2-7 librsvg2-2 libshine3 libxi6 libatk1.0-0 libwebpmux3 libthai0 libmp3lame0 libxcursor1
 
6. Update pyenv.
	
	$ pyenv update

7. Install Python version 3.7.12.

	$ pyenv install 3.7.12

8. Make a new directory for the project.
	
	$ mkdir project
	$ cd project

9. Change the local python version to 3.7.12

	$ pyenv local 3.7.12	
	check the python version
	$ python --version

10. Install a few more packages.

	$ sudo apt install -y build-essential cmake pkg-config libjpeg-dev libtiff5-dev libpng-dev libavcodec-dev libavformat-dev libswscale-dev libv4l-dev libxvidcore-dev libx264-dev libfontconfig1-dev libcairo2-dev libgdk-pixbuf2.0-dev libpango1.0-dev libgtk2.0-dev libgtk-3-dev libatlas-base-dev gfortran libhdf5-dev libhdf5-serial-dev libhdf5-103 libqt5gui5 libqt5webkit5 libqt5test5 python3-pyqt5 python3-dev

11. Create a virtual environment (inside project folder).

	$ python -m venv env
	(optionally, 'env' can be replaced with a name of your choice)

12. Activate the virtual environment.

	$ source env/bin/activate
	if you want to exit the virtual environment
	$ deactivate

13. Update pip.

	$ python -m pip install --upgrade pip
	$ pip install --upgrade pip setuptools

14. Install TensorFlow.

	$ wget https://raw.githubusercontent.com/PINTO0309/Tensorflow-bin/main/previous_versions/download_tensorflow-2.4.0-cp37-none-linux_armv7l.sh

	$ chmod +x download_tensorflow-2.4.0-cp37-none-linux_armv7l.sh

	$ ./download_tensorflow-2.4.0-cp37-none-linux_armv7l.sh

	$ pip install tensorflow-2.4.0-cp37-none-linux_armv7l.whl 
